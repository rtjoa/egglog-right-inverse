; This program can be run in the egglog demo:
; https://egraphs-good.github.io/egglog/

; I is the inverse function; all terms are ground
(datatype Expr (X) (One) (I Expr) (Mul Expr Expr))

; Group axioms; note that rewrites go left-to-right
(ruleset id) (ruleset inv) (ruleset assoc1) (ruleset assoc2)
(rewrite (Mul (One) x)     x                 :ruleset id)
(rewrite (Mul (I x) x)     (One)             :ruleset inv)
(rewrite (Mul (Mul x y) z) (Mul x (Mul y z)) :ruleset assoc1)
(rewrite (Mul x (Mul y z)) (Mul (Mul x y) z) :ruleset assoc2)

; Hardcoded "magic terms" to seed the egraph.
; I first enumerated many terms, then minimized to get these.
(Mul (I (I (X))) (I (X)))
(Mul (Mul (I (X)) (X)) (I (X)))
(Mul (One) (One))
(Mul (One) (Mul (X) (One)))
(Mul (Mul (X) (One)) (One))

; Hardcoded schedule that we know will prove what we want
(run-schedule inv id assoc1 assoc2 id)

; Check that the right inverse is One
(check (= (Mul (X) (I (X))) (One)))
