(datatype Expr (Mul Expr Expr) (One) (I Expr) (X))

(ruleset id) (ruleset inv) (ruleset assoc1) (ruleset assoc2)
(rewrite (Mul (One) x)     x                 :ruleset id)
(rewrite (Mul (I x) x)     (One)             :ruleset inv)
(rewrite (Mul (Mul x y) z) (Mul x (Mul y z)) :ruleset assoc1)
(rewrite (Mul x (Mul y z)) (Mul (Mul x y) z) :ruleset assoc2)

; Hardcoded terms that we know will prove what we want
(Mul (I (I (X))) (I (X)))
(Mul (Mul (I (X)) (X)) (I (X)))
(Mul (One) (One))
(Mul (One) (Mul (X) (One)))
(Mul (Mul (X) (One)) (One))

; Hardcoded schedule that we know will prove what we want
(run-schedule inv id assoc1 assoc2 id)

(check (= (Mul (X) (I (X))) (One)))
(extract (Mul (X) (I (X))))
